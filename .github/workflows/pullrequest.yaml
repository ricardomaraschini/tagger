name: pullrequest

on:
  pull_request:
    branches:
      - main

jobs:
  vet:
    name: vet
    runs-on: ubuntu-latest
    steps:
    - name: install dependencies
      run: sudo apt install libbtrfs-dev libgpgme-dev -y

    - name: check out code
      uses: actions/checkout@v5

    - name: install go
      uses: actions/setup-go@v6
      with:
        go-version: '^1.25'

    - name: run vet
      run: go vet ./...

  unit:
    name: unit
    runs-on: ubuntu-latest
    steps:
    - name: install dependencies
      run: sudo apt install libbtrfs-dev libgpgme-dev -y

    - name: check out source code
      uses: actions/checkout@v2

    - name: install go
      uses: actions/setup-go@v6
      with:
        go-version: '^1.25'

    - name: run tests
      run: go test -v ./...

  build:
    name: build
    needs:
    - vet
    - unit
    runs-on: ubuntu-latest
    steps:
    - name: install dependencies
      run: sudo apt install libbtrfs-dev libgpgme-dev -y

    - name: check out code
      uses: actions/checkout@v2

    - name: install go
      uses: actions/setup-go@v6
      with:
        go-version: '^1.25'

    - name: build all
      run: make build

  image:
    name: image
    needs:
    - vet
    - unit
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: registry login
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: build image
      id: push
      uses: docker/build-push-action@v2
      with:
        push: true
        context: ./
        file: ./Containerfile
        tags: quay.io/tagger/operator:pr-${{ github.event.number }}

  release:
    name: release
    needs:
      - image
      - build
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: setting image tag in values.yaml
      run: sed -i 's/latest/pr-${{ github.event.number }}/g' chart/values.yaml

    - name: upload helm chart artifact
      uses: actions/upload-artifact@v4
      with:
        name: helm-chart
        path: chart

  integration:
    name: integration
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: download helm chart artifact
      uses: actions/download-artifact@v4
      with:
        name: helm-chart
        path: downloaded-chart

    - name: install kuttl
      run: |-
        curl -o kuttl -L https://github.com/kudobuilder/kuttl/releases/download/v0.22.0/kubectl-kuttl_0.22.0_linux_x86_64
        chmod 755 kuttl

    - name: install kind
      uses: helm/kind-action@v1
      with:
        cluster_name: kind

    - name: create tagger namespace
      run: |-
        kubectl create namespace tagger
        kubectl config set-context --current --namespace=tagger

    - name: install helm chart
      run: helm install tagger ./downloaded-chart

    - name: sleep for a while
      run: sleep 30

    - name: check deployments
      run: |-
        READY=$(kubectl get deploy tagger --no-headers -o=custom-columns=:.status.readyReplicas)
        if [ "$READY" != "1" ]; then
          echo tagger deployment not ready
          kubectl get deploy -o yaml
          kubectl get pods -o yaml
          exit 1
        fi

    - name: e2e
      run: ./kuttl test --timeout=180 e2e
