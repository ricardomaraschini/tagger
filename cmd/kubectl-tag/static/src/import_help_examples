  Assuming one wants to import a Tag called "mytag" in the namespace
  "production":

  $ kubectl tag import mytag -n production

  The output of this command informs what is the Generation where the
  image will be placed. If mirror is configured for "mytag" tagger may
  take some time to proccess the request.

  Taking as base the existence of the following Tag (some irrelevant
  field were redacted):

  kind: Tag
  metadata:
    name: mytag
    namespace: production
  spec:
    from: remote.registry.io/repo/image:latest
    generation: 0
  status:
    generation: 0
    references:
    - generation: 1
      imageReference: internal.registry/production/mytag@sha256:001
    - generation: 0
      imageReference: internal.registry/production/mytag@sha256:000

  Upon running the above mentioned import command, the outcome of the
  Tag will be similar to this:

  kind: Tag
  metadata:
    name: mytag
    namespace: production
  spec:
    from: remote.registry.io/repo/image:latest
    generation: 2
  status:
    generation: 2
    references:
    - generation: 2
      imageReference: internal.registry/production/mytag@sha256:002
    - generation: 1
      imageReference: internal.registry/production/mytag@sha256:001
    - generation: 0
      imageReference: internal.registry/production/mytag@sha256:000

  Every Deployment leveraging this tag will immediately starts to use
  the image pointed by Generation 2. Important to notice the jump from
  previously used Generation 0 directly to Generation 2.
